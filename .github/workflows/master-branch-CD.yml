name: master branch CD

on:
    push:
        branches: ['master']
    pull_request:
        branches: ['master']

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            # 1단계: 코드 체크아웃
            - name: Checkout code
              uses: actions/checkout@v4

            # 2단계: Docker 로그인
            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            # 3단계: Docker 이미지 빌드
            - name: Build Docker image
              run: |
                  docker build -t shindong3/backend-main:latest .
                  docker tag shindong3/backend-main:latest shindong3/backend-main:$GITHUB_SHA

            # 4단계: Docker 이미지 푸시
            - name: Push Docker image to Docker Hub
              run: |
                  docker push shindong3/backend-main:latest
                  docker push shindong3/backend-main:$GITHUB_SHA

            # 5단계: EC2 서버로 배포 실행
            - name: Deploy to EC2
              uses: appleboy/ssh-action@v0.1.6
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USERNAME }}
                  key: ${{ secrets.EC2_PRIVATE_KEY }}
                  port: 22
                  script: |
                      docker pull shindong3/backend-main:latest                      
                      docker compose restart api-1
                      while ! curl -s http://localhost:3000/post/test; do
                        echo "Waiting for API-1 to be ready..."
                        sleep 5
                      docker compose restart api-2
                      docker image prune -f
